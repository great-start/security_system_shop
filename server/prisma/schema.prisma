// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  firstName String?
  lastName  String?
  email     String   @unique
  password  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Roles    @default(USER)
  Basket    Basket[]
  Token     Token[]
}

model Token {
  id           String   @id @default(uuid())
  accessToken  String
  refreshToken String
  createdAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
}

model Basket {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  status    String
  createdAt DateTime      @default(now())
  Product   Basket_item[]
}

model Basket_item {
  id        String  @id @default(cuid())
  basket    Basket  @relation(fields: [basketId], references: [id], onDelete: Cascade)
  basketId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int     @default(1)
}

model Product {
  id        String          @id @default(uuid())
  name      String          @unique
  title     String?
  price     Int
  status    Product_status?
  type      Type            @relation(fields: [typeId], references: [id])
  typeId    Int
  quantity  Int?            @default(0)
  image     String?
  createdAt DateTime        @default(now())
  Basket    Basket_item[]
}

model Type {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  Product    Product[]
  category   Category  @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId Int
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  Type      Type[]
}

enum Product_status {
  OUT_OF_STOCK
  IN_STOCK
  RUNNING_LOW
}

enum Roles {
  USER
  ADMIN
}
